/*
ユークリッドの互除法は、2 つの自然数(0を含むとする)の最大公約数を求める手法の一つである。 アルゴリズム（手順）を以下に示す。

この方法を用いて、入力された二つの数値の最大公約数を 求めるプログラムを作成しなさい。

ただし、実行例のように途中経過を表示すること。 入力値に対するエラー処理は含めても含めなくてもどちらでもよい。

　アルゴリズム

   1. 入力を m, n (m ≧ n) とする。
   2. n = 0 なら、 m を最大公約数として出力し、プログラムを終了する。
   3. m を n で割った余りを新たに n とし、
      元のnを新たにm として、
      2に戻る。

[実行例]

% ./a.out
m nを入力して下さい : 21 14
21 % 14 = 7
14 % 7 = 0
最大公約数は 7 です
% ./a.out
m nを入力して下さい : 32 18
32 % 18 = 14
18 % 14 = 4
14 % 4 = 2
4 % 2 = 0
最大公約数は 2 です
% ./a.out
m nを入力して下さい : 78 48
78 % 48 = 30
48 % 30 = 18
30 % 18 = 12
18 % 12 = 6
12 % 6 = 0
最大公約数は 6 です
*/

#include <stdio.h>

int main(){
  int m,n,a,b,c,d;

  while(1){
    printf("m,n を入力して下さい：");
    scanf("%d%d",&m,&n);
    if(m >= n){
      break;
    }else printf("m>n になるように入力して下さい\n");
  }

    a = m;
    b = n;

  while(1){
    c = a % b;
    printf("%d %% %d = %d\n",a,b,c);
    if(c == 0)
      break;
    a = b;
    b = c;
  }
  return 0;
}

    
