/*
異なる n 個のものから順序を考えずに r 個のものを取り出すときの場合の数を「n 個のものから r 個をとる組み合わせ」と言い、nCr で表す。この数は、
nCr = n! / (n-r)!r!  (但し、0<=r<=n)
と定義されている。この数を計算するプログラムを作成しなさい。
まず、以下の方法で計算するプログラムを作り、ex06b3_1.c として提出しなさい。
n と r を入力させる。
n! を計算する （ヒント: B-2 を参照せよ）
(n-r)! を計算する
r! を計算する
(2) / (3) / (4) を計算する
一方、 n! と (n-r)! は一部が重複していて、重複部分は 5. の割り算で相殺されるため、計算を省略することができる。このようにして計算の手間を省いたプログラムを作り、ex06b3_2.c として提出しなさい。また、12C5などを計算して、２つのプログラムで同じ結果が得られることを確認しなさい。
なお、いずれのプログラムでも入力された n と r の値が適切かどうかはチェックしなくてよい。

実行例 (ex06b3_1.c でも ex06b3_2.c でも同じ結果になる)
 % ./a.out
nとrを入力してください：12 5
12C5 = 792
% ./a.out
nとrを入力してください：10 5
10C5 = 252
% ./a.out
nとrを入力してください：3 1
3C1 = 3
% ./a.out
nとrを入力してください：5 0
5C0 = 1
%
ex06b3_2.c へのヒント: 例えば上の例で、n を 12、r を 5 としたとき、nCr の計算で行う 12! (＝n! ) の 7! (＝(n-r)! ) による割り算は 12×11×10×9×8 に等しい。
*/

#include <stdio.h>

int main(){
  int n,i,j,k,r,x,combi=0,facn=1,facx=1,facr=1;

  printf("nとrを入力してください");
  scanf("%d%d",&n,&r);

  /*n!*/
  for(i = n ; 0 < i ; i--){
    facn *= i;
  }

  /*(n-r)!*/
  x = n-r;
  for(j = x ; 0 < j ; j--){
    facx *= j;
  }
  /*r!*/
  for(k = r ; 0 < k ; k--){
    facr *= k;
  }

  printf("%d\n%d\n%d\n\n",facn,facx,facr);

  combi = facn / facx;
  combi = combi / facr;

  printf("%dC%d = %d\n",n,r,combi);
  return 0;
}

  
